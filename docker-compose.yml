version: "3.9"

services:
  redis:
    image: redis:7-alpine
    container_name: redis_server
    ports:
      - "6379:6379"

  backend:
    build: ./services/backend
    container_name: backend
    ports:
      - "8000:8000"

  auth:
    build: ./services/auth
    container_name: auth
    environment:
      - JWT_SECRET=supersecretkey
    ports:
      - "8001:8001"

  gateway:
    build: ./gateway
    container_name: gateway
    depends_on:
      - backend
      - auth
      - redis
    stop_signal: SIGTERM
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 5s
      timeout: 2s
      retries: 3
    environment:
      - BACKEND_URL=http://backend:8000
      - AUTH_URL=http://auth:8001
      - REDIS_URL=redis://redis:6379/0
      - JWT_SECRET=supersecretkey
      - GLOBAL_RATE=100 # 100 req/sec per key
    ports:
      - "8080:8080"

  locust:
    build: ./locust
    container_name: locust
    depends_on:
      - gateway
    environment:
      - LOCUST_HOST=http://gateway:8080
    ports:
      - "8089:8089"

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./infra/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    depends_on:
      - gateway

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus
      - loki
    volumes:
      - grafana-data:/var/lib/grafana

  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/config/loki-config.yaml
    volumes:
      - ./loki-config.yaml:/etc/loki/config/loki-config.yaml
      - ./loki-data/wal:/wal # ✅ WAL data
      - ./loki-data/index:/loki/index # ✅ TSDB index data
      - ./loki-data/cache:/loki/cache # ✅ TSDB cache
      - ./loki-data/chunks:/loki/chunks # ✅ chunk storage
      - ./loki-data/compactor:/loki/compactor # ✅ compactor working dir

  promtail:
    image: grafana/promtail:2.9.4
    container_name: promtail
    volumes:
      - ./promtail-config.yaml:/etc/promtail/config.yml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
    command: -config.file=/etc/promtail/config.yml
    depends_on:
      - loki

  tempo:
    image: grafana/tempo:latest
    container_name: tempo
    command: ["-config.file=/etc/tempo.yaml"]
    ports:
      - "3200:3200" # HTTP API / metrics
      - "4317:4317" # OTLP gRPC (for traces from FastAPI / OpenTelemetry)
      - "4318:4318" # OTLP HTTP
    volumes:
      - ./infra/tempo/tempo.yaml:/etc/tempo.yaml
      - ./tempo-data:/tmp/tempo

volumes:
  grafana-data:
  tempo-data:
  loki-data:
    driver: local
